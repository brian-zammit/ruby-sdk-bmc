=begin
#Bare Metal Cloud API

#Create, power off, power on, reset, reboot, or shut down your server with the Bare Metal Cloud API. Deprovision servers, get or edit SSH key details, and a lot more. Manage your infrastructure more efficiently using just a few simple api calls.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/how-to-deploy-bare-metal-cloud-server' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/bmc/v1/)</b> 

The version of the OpenAPI document: 0.1
Contact: support@phoenixnap.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for BmcApi::ServersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ServersApi' do
  before do
    # run before each test
    @api_instance = BmcApi::ServersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ServersApi' do
    it 'should create an instance of ServersApi' do
      expect(@api_instance).to be_instance_of(BmcApi::ServersApi)
    end
  end

  # unit tests for delete_private_network
  # Removes the server from private network.
  # Removes the server from private network. &lt;b&gt;No actual configuration is performed on the operating system.&lt;/b&gt; BMC configures exclusively the networking devices in the datacenter infrastructure. You are expected to perform network configuration changes in the operating system of this server. &lt;b&gt;This is an advanced network action that can make your server completely unavailable over any network. Make sure you are able to access this server over remote console in case of misconfiguration.&lt;/b&gt;
  # @param server_id The server&#39;s ID.
  # @param private_network_id The private network identifier.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'delete_private_network test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_get
  # List servers.
  # List all servers owned by account.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tag A list of query parameters related to tags in the form of tagName.tagValue
  # @return [Array<Server>]
  describe 'servers_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_post
  # Create new server.
  # Create (request) new server for account. Server DNS will be configured to access Google&#39;s public DNS at 8.8.8.8 .
  # @param [Hash] opts the optional parameters
  # @option opts [ServerCreate] :server_create 
  # @return [Server]
  describe 'servers_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_actions_deprovision_post
  # Deprovision a server.
  # Deprovision the server. Supports advanced deprovision configuration.
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @option opts [RelinquishIpBlock] :relinquish_ip_block 
  # @return [String]
  describe 'servers_server_id_actions_deprovision_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_actions_power_off_post
  # Power off server.
  # Power off specific server.
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @return [ActionResult]
  describe 'servers_server_id_actions_power_off_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_actions_power_on_post
  # Power on server.
  # Power on specific server.
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @return [ActionResult]
  describe 'servers_server_id_actions_power_on_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_actions_reboot_post
  # Reboot server.
  # Reboot specific server.
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @return [ActionResult]
  describe 'servers_server_id_actions_reboot_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_actions_reserve_post
  # Reserve server.
  # Reserve specific server.
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @option opts [ServerReserve] :server_reserve 
  # @return [Server]
  describe 'servers_server_id_actions_reserve_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_actions_reset_post
  # Reset server.
  # Reset specific server.
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @option opts [ServerReset] :server_reset 
  # @return [ResetResult]
  describe 'servers_server_id_actions_reset_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_actions_shutdown_post
  # Shutdown server.
  # Shut down specific server.
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @return [ActionResult]
  describe 'servers_server_id_actions_shutdown_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_delete
  # Delete server.
  # Deprovision specific server. Any IP blocks assigned to this server will also be relinquished and deleted. Deprecated: see /servers/{serverId}/actions/deprovision
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @return [DeleteResult]
  describe 'servers_server_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_get
  # Get server.
  # Get server properties.
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @return [Server]
  describe 'servers_server_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_ip_blocks_ip_block_id_delete
  # Unassign IP Block from Server.
  # Removes the IP block from the server. &lt;b&gt;No actual configuration is performed on the operating system.&lt;/b&gt; BMC configures exclusively the networking devices in the datacenter infrastructure. You are expected to perform network configuration changes in the operating system of this server. &lt;b&gt;This is an advanced network action that can make your server completely unavailable over any network. Make sure you are able to access this server over remote console in case of misconfiguration.&lt;/b&gt;
  # @param server_id The server&#39;s ID.
  # @param ip_block_id The IP Block identifier.
  # @param [Hash] opts the optional parameters
  # @option opts [RelinquishIpBlock] :relinquish_ip_block 
  # @return [String]
  describe 'servers_server_id_ip_blocks_ip_block_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_ip_blocks_post
  # Assign IP Block to Server.
  # Adds an IP block to this server. &lt;b&gt;No actual configuration is performed on the operating system.&lt;/b&gt; BMC configures exclusively the networking devices in the datacenter infrastructure. You are expected to perform network configuration changes in the operating system of this server.
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @option opts [ServerIpBlock] :server_ip_block 
  # @return [ServerIpBlock]
  describe 'servers_server_id_ip_blocks_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_patch
  # Patch a Server.
  # Any changes to the hostname or description using the BMC API will reflect solely in the BMC API and portal. The changes are intended to keep the BMC data up to date with your server. We do not have access to your server&#39;s settings. Local changes to the server&#39;s hostname will not be reflected in the API or portal.
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @option opts [ServerPatch] :server_patch 
  # @return [Server]
  describe 'servers_server_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_private_networks_post
  # Adds the server to a private network.
  # Adds the server to a private network.
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @option opts [ServerPrivateNetwork] :server_private_network 
  # @return [ServerPrivateNetwork]
  describe 'servers_server_id_private_networks_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for servers_server_id_tags_put
  # Set server tags.
  # Set tags for server.
  # @param server_id The server&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<TagAssignmentRequest>] :tag_assignment_request 
  # @return [Server]
  describe 'servers_server_id_tags_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
